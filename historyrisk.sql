-- MySQL Script generated by MySQL Workbench
-- Thu Jun  8 09:06:43 2017
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema default_schema
-- -----------------------------------------------------
SHOW WARNINGS;
-- -----------------------------------------------------
-- Schema historyrisk
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `historyrisk` ;

-- -----------------------------------------------------
-- Schema historyrisk
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `historyrisk` ;
SHOW WARNINGS;
USE `historyrisk` ;

-- -----------------------------------------------------
-- Table `historyrisk`.`TB_SETOR_EMPR`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `historyrisk`.`TB_SETOR_EMPR` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `historyrisk`.`TB_SETOR_EMPR` (
  `ID_SETOR_EMPR` INT NOT NULL AUTO_INCREMENT COMMENT 'Identificador único do setor da empresa.',
  `NM_SETOR_EMPR` VARCHAR(400) NOT NULL COMMENT 'Nome do setor da empresa.',
  `NU_MATR_INCS` VARCHAR(10) NOT NULL,
  `DT_INCS` DATETIME NOT NULL,
  `NU_MATR_ALTR` VARCHAR(10) NULL DEFAULT NULL,
  `DT_ALTR` DATETIME NULL DEFAULT NULL,
  PRIMARY KEY (`ID_SETOR_EMPR`))
ENGINE = InnoDB;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `historyrisk`.`TB_HRSK_PRJT`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `historyrisk`.`TB_HRSK_PRJT` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `historyrisk`.`TB_HRSK_PRJT` (
  `ID_HRSK_PRJT` INT NOT NULL AUTO_INCREMENT COMMENT 'Identificador único do projeto para gerenciamento de riscos.',
  `ID_SETOR_EMPR` INT NOT NULL,
  `DS_PRJT` VARCHAR(400) NOT NULL COMMENT 'Descrição do nome do projeto.',
  `DT_RGST_PRJT` DATETIME NOT NULL,
  `NU_MATR_INCS` VARCHAR(10) NOT NULL,
  `DT_INCS` DATETIME NOT NULL,
  `NU_MATR_ALTR` VARCHAR(10) NULL DEFAULT NULL,
  `DT_ALTR` DATETIME NULL DEFAULT NULL,
  PRIMARY KEY (`ID_HRSK_PRJT`),
  CONSTRAINT `FK_SETOR_EMPR_PRJT_01`
    FOREIGN KEY (`ID_SETOR_EMPR`)
    REFERENCES `historyrisk`.`TB_SETOR_EMPR` (`ID_SETOR_EMPR`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

SHOW WARNINGS;
CREATE INDEX `IX_PRJT_01` ON `historyrisk`.`TB_HRSK_PRJT` (`ID_SETOR_EMPR` ASC);

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `historyrisk`.`TB_HRSK_FAIXA_PROB`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `historyrisk`.`TB_HRSK_FAIXA_PROB` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `historyrisk`.`TB_HRSK_FAIXA_PROB` (
  `ID_FAIXA_PROB` INT NOT NULL AUTO_INCREMENT,
  `DS_FAIXA_PROB` VARCHAR(400) NOT NULL,
  `NU_LMTE_INFR` INT(3) NOT NULL,
  `NU_LMTE_SUPR` INT(3) NOT NULL,
  `NU_MATR_INCS` VARCHAR(10) NOT NULL,
  `DT_INCS` DATETIME NOT NULL,
  `NU_MATR_ALTR` VARCHAR(10) NULL DEFAULT NULL,
  `DT_ALTR` DATETIME NULL DEFAULT NULL,
  PRIMARY KEY (`ID_FAIXA_PROB`))
ENGINE = InnoDB;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `historyrisk`.`TB_HRSK_USUA`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `historyrisk`.`TB_HRSK_USUA` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `historyrisk`.`TB_HRSK_USUA` (
  `NU_MATR_USUA` INT(11) NOT NULL,
  `NM_USUA` VARCHAR(200) NOT NULL,
  `EMAIL_USUA` VARCHAR(200) NOT NULL,
  `USR_USUA` VARCHAR(20) NOT NULL,
  `PSW_USUA` VARCHAR(12) NOT NULL,
  `DT_INCS` DATETIME NOT NULL,
  PRIMARY KEY ())
ENGINE = InnoDB;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `historyrisk`.`TB_HRSK_CATG_RISCO`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `historyrisk`.`TB_HRSK_CATG_RISCO` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `historyrisk`.`TB_HRSK_CATG_RISCO` (
  `ID_CATG_RISCO` INT NOT NULL AUTO_INCREMENT COMMENT 'Identificador único do registro da categoria de risco.',
  `DS_CATG_RISCO` VARCHAR(400) NOT NULL COMMENT 'Descrição da categoria de risco.',
  `NU_MATR_INCS` VARCHAR(10) NULL DEFAULT NULL,
  `DT_INCS` DATETIME NOT NULL,
  `NU_MATR_ALTR` VARCHAR(10) NULL DEFAULT NULL,
  `DT_ALTR` DATETIME NULL DEFAULT NULL,
  PRIMARY KEY (`ID_CATG_RISCO`))
ENGINE = InnoDB;

SHOW WARNINGS;
CREATE UNIQUE INDEX `NU_MATR_INCS_UNIQUE` ON `historyrisk`.`TB_HRSK_CATG_RISCO` (`NU_MATR_INCS` ASC);

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `historyrisk`.`TB_HRSK_NIVEL_IPCTO`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `historyrisk`.`TB_HRSK_NIVEL_IPCTO` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `historyrisk`.`TB_HRSK_NIVEL_IPCTO` (
  `ID_NIVEL_IPCTO` INT NOT NULL AUTO_INCREMENT,
  `NM_NIVEL_IPCTO` VARCHAR(100) NOT NULL,
  `DS_NIVEL_IPCTO` VARCHAR(400) NOT NULL,
  `IC_NIVEL_IPCTO` VARCHAR(1) NOT NULL,
  `VL_ASSC_NIVEL_IPCTO` DECIMAL(10,2) NOT NULL,
  `NU_MATL_INCS` VARCHAR(10) NOT NULL,
  `DT_INCS` DATETIME NOT NULL,
  `NU_MATL_ALTR` VARCHAR(10) NULL DEFAULT NULL,
  `DT_ALTR` DATETIME NULL DEFAULT NULL,
  PRIMARY KEY (`ID_NIVEL_IPCTO`))
ENGINE = InnoDB;

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `historyrisk`.`TB_HRSK_SUBCATG_RISCO`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `historyrisk`.`TB_HRSK_SUBCATG_RISCO` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `historyrisk`.`TB_HRSK_SUBCATG_RISCO` (
  `ID_SUBCATG_RISCO` INT NOT NULL AUTO_INCREMENT COMMENT 'Identificador único do registro da sub categoria de risco.',
  `ID_CATG_RISCO` INT NULL COMMENT 'Identificador da categoria do risco.',
  `DS_SUBCATG_RISCO` VARCHAR(100) NOT NULL COMMENT 'Descrição da sub categoria de risco.',
  `NU_MATR_INCS` VARCHAR(10) NULL DEFAULT NULL,
  `DT_INCS` DATETIME NOT NULL,
  `NU_MATR_ALTR` VARCHAR(10) NULL DEFAULT NULL,
  `DT_ALTR` DATETIME NULL DEFAULT NULL,
  PRIMARY KEY (`ID_SUBCATG_RISCO`),
  CONSTRAINT `FK_SUBCATG_RISCO_01`
    FOREIGN KEY (`ID_CATG_RISCO`)
    REFERENCES `historyrisk`.`TB_HRSK_CATG_RISCO` (`ID_CATG_RISCO`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

SHOW WARNINGS;
CREATE UNIQUE INDEX `NU_MATR_INCS_UNIQUE` ON `historyrisk`.`TB_HRSK_SUBCATG_RISCO` (`NU_MATR_INCS` ASC);

SHOW WARNINGS;
CREATE INDEX `FK_SUBCATG_RISCO_01_idx` ON `historyrisk`.`TB_HRSK_SUBCATG_RISCO` (`ID_CATG_RISCO` ASC);

SHOW WARNINGS;

-- -----------------------------------------------------
-- Table `historyrisk`.`TB_HRSK_RISCO`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `historyrisk`.`TB_HRSK_RISCO` ;

SHOW WARNINGS;
CREATE TABLE IF NOT EXISTS `historyrisk`.`TB_HRSK_RISCO` (
  `ID_HRSK_RISCO` INT NOT NULL AUTO_INCREMENT COMMENT 'Identificador único do risco na lista de risco.',
  `ID_FAIXA_PROB` INT NOT NULL,
  `ID_CATG_RISCO` INT NOT NULL,
  `ID_NIVEL_IPCTO` INT NOT NULL,
  `ID_HRSK_PRJT` INT NOT NULL COMMENT 'Identificador único do projeto para gerenciamento de riscos.',
  `ID_SUBCATG_RISCO` INT NOT NULL,
  `DS_RISCO` VARCHAR(400) NOT NULL COMMENT 'Descrição do risco identificado.',
  `NU_PERCT_PROB_RISCO` DECIMAL(5,2) NOT NULL,
  `VL_CUSTO_ESTMD_RISCO` DECIMAL(10,2) NULL DEFAULT NULL,
  `VL_CUSTO_ESPRD_RISCO_NGTV` DECIMAL(10,2) NULL DEFAULT NULL,
  `VL_CUSTO_ESPRD_RISCO_PSTV` DECIMAL(10,2) NULL DEFAULT NULL,
  `IC_RISCO_OCRRD_PRJT` VARCHAR(1) NULL COMMENT 'Indicador do risco ocorrido (S) Sim, (N) Nao.',
  `OB_RISCO_OCRRD_PRJT` VARCHAR(400) NULL COMMENT 'Observacao a respeito da situacao do risco ocorrido no projeto.',
  `NU_MATR_INCS` VARCHAR(10) NOT NULL,
  `DT_INCS` DATETIME NOT NULL,
  `NU_MATR_ALTR` VARCHAR(10) NULL DEFAULT NULL,
  `DT_ALTR` DATETIME NULL DEFAULT NULL,
  PRIMARY KEY (`ID_HRSK_RISCO`),
  CONSTRAINT `FK_FAIXA_PROB_RISCO_01`
    FOREIGN KEY (`ID_FAIXA_PROB`)
    REFERENCES `historyrisk`.`TB_HRSK_FAIXA_PROB` (`ID_FAIXA_PROB`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `FK_CATG_RISCO_02`
    FOREIGN KEY (`ID_CATG_RISCO`)
    REFERENCES `historyrisk`.`TB_HRSK_CATG_RISCO` (`ID_CATG_RISCO`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `FK_NIVEL_IPCTO_RISCO_03`
    FOREIGN KEY (`ID_NIVEL_IPCTO`)
    REFERENCES `historyrisk`.`TB_HRSK_NIVEL_IPCTO` (`ID_NIVEL_IPCTO`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `FK_PRJT_RISCO_04`
    FOREIGN KEY (`ID_HRSK_PRJT`)
    REFERENCES `historyrisk`.`TB_HRSK_PRJT` (`ID_HRSK_PRJT`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `FK_SUBCATG_RISCO_05`
    FOREIGN KEY (`ID_SUBCATG_RISCO`)
    REFERENCES `historyrisk`.`TB_HRSK_SUBCATG_RISCO` (`ID_SUBCATG_RISCO`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

SHOW WARNINGS;
CREATE INDEX `IX_RISCO1` ON `historyrisk`.`TB_HRSK_RISCO` (`ID_FAIXA_PROB` ASC);

SHOW WARNINGS;
CREATE INDEX `IX_RISCO2` ON `historyrisk`.`TB_HRSK_RISCO` (`ID_CATG_RISCO` ASC);

SHOW WARNINGS;
CREATE INDEX `IX_RISCO3` ON `historyrisk`.`TB_HRSK_RISCO` (`ID_NIVEL_IPCTO` ASC);

SHOW WARNINGS;
CREATE INDEX `IX_RISCO4` ON `historyrisk`.`TB_HRSK_RISCO` (`ID_HRSK_PRJT` ASC);

SHOW WARNINGS;
CREATE INDEX `fk_TB_HRSK_RISCO_TB_HRSK_SUBCATG_RISCO1_idx` ON `historyrisk`.`TB_HRSK_RISCO` (`ID_SUBCATG_RISCO` ASC);

SHOW WARNINGS;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
